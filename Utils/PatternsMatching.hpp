#ifndef TESTPROJECT_PATTERNSMATCHING_HPP
#define TESTPROJECT_PATTERNSMATCHING_HPP

#include <string>
#include <vector>
#include <iostream>

class PatternsMatching
{
public:
    PatternsMatching() = delete;

    static bool maliciousPattern(const std::vector<char>& buffer, const char* pattern)
    {
        size_t pattern_index = 0;
        size_t size_of_pattern = sizeof(pattern);

        for(int i = 0; i < buffer.size(); ++i)
        {
            if(buffer[i] == pattern[pattern_index])
            {
                ++pattern_index;

                if(pattern_index == size_of_pattern)
                {
                    return true;
                }
            }
            else
            {
                pattern_index = 0;
            }
        }

        return false;
    }

};

#endif //TESTPROJECT_PATTERNSMATCHING_HPP
